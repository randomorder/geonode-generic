---
version: '2'
catalog:
    name: "GeoNode generic"
    version: "v1.1"
    description: "Generic GeoNode deployment. This version has improved connection strings for db."
    uuid: geonode-generic-0
    minimum_rancher_version: 'v1.6'

    questions:
        - variable: "NGINX_PORT_MAPPING"
          label: "Port mapping for Nginx container"
          description: |
              Port mapping for Nginx container. For instance "80:80"
              will map Nginx port 80 to port 80 of the host machine.
              Set to "80" to assign a random port

          default: "80:80"
          required: true
          type: "string"
        - variable: "ALLOWED_HOSTS"
          label: "List of allowed host header values"
          description: |
                List of host header values which should be
                permitted. You should add full-qualified domain
                names under which deployment is visible. Default
                values, django and geonode values are
                added internally. Example ['123.123.123.123','foo.bar.org']
          required: true
          type: string
          default: "[]"

        - variable: "SITEURL"
          label: "Default URL for site"
          description: |
                URL to default location of site. It will be used
                to construct absolute urls. Remember to add trailing
                slash at the end. Example http://foo.org/ 
          required: true
          type: 'string'
          default:

        - variable: "SITENAME"
          label: "Name of site"
          description: |
                Name of the site to be used in title
          required: false
          default: "GeoNode"
          type: string

        - variable: "ENABLE_HTTPS"
          label: "Enable HTTPS in NGINX"
          description: |
              Set to true to enable HTTPS in NGINX config. file,
              if enabled SSL key/certificate must be provided by the user.
          required: true
          type: boolean
          default: false

        - variable: "ADMIN_EMAILS"
          label: "List of admin emails"
          description: |
                List of emails of admins, who should
                receive notifications. Entries
                should be separated with coma.
          required: false
          type: string
          default:

        - variable: "GEOSERVER_ADMIN_PASSWORD"
          label: "Password for GeoServer admin user"
          description: |
                Password for admin user in GeoServer.
          required: true
          type: string
          default:

        - variable: "HOST_AFFINITY"
          label: "Label of host to deploy on"
          description: |
                To keep containers running on specific
                hosts, provide label attached to host
                to deploy on. For example, if you create a label 
                when deploying your host with key geonode 
                and value true then you would enter here geonode=true
          required: true
          type: string
          default:

        - variable: "BACKUPS_VOLUME_DRIVER"
          label: "Backups Volume driver to use"
          description: |
              Volume driver to use for the Volume attached
              to the backups container (local, rancher-nfs, ...)
          required: true
          type: string
          default: local

        - variable: "BACKUPS_VOLUME_EXTERNAL"
          label: "Use pre-existing volume to store Backups"
          description: |
              Set to true to use a pre-existing Volume for backups,
              set to false to create a named volume local to the stack.
          required: true
          type: boolean
          default: false

services:
    db:
        scale: 1
        labels:
            io.rancher.scheduler.affinity:host_label: ${HOST_AFFINITY}
    django:
        retain_ip: true
        scale: 1
        labels:
            io.rancher.scheduler.affinity:host_label: ${HOST_AFFINITY}
    geoserver:
        scale: 1
        labels:
            io.rancher.scheduler.affinity:host_label: ${HOST_AFFINITY}
    geonode:
        scale: 1
        labels:
            io.rancher.scheduler.affinity:host_label: ${HOST_AFFINITY}
    data-dir-conf:
        labels:
            io.rancher.container.start_once: true        
            io.rancher.scheduler.affinity:host_label: ${HOST_AFFINITY}
        scale: 1
    backup:
        scale: 1
        labels:
            io.rancher.scheduler.affinity:host_label: ${HOST_AFFINITY}
    restore:
        scale: 1
        start_on_create: false
        labels:
            io.rancher.container.start_once: true        
            io.rancher.scheduler.affinity:host_label: ${HOST_AFFINITY}
